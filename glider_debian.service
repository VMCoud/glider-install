#!/usr/bin/env bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

### BEGIN INIT INFO
# Provides:          glider is a proxyer
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: glider is a proxyer
# Description:       Start or stop the glider
### END INIT INFO

NAME="glider"
CONFIG="/root/.glider/glider.conf"
LOG="/root/.glider/glider.log"

Green_font_prefix="\033[32m" && Red_font_prefix="\033[31m" && Green_background_prefix="\033[42;37m" && Red_background_prefix="\033[41;37m" && Font_color_suffix="\033[0m"
Info="${Green_font_prefix}[信息]${Font_color_suffix}"
Error="${Red_font_prefix}[错误]${Font_color_suffix}"
RETVAL=0

check_running(){
	PID=`ps -ef | grep "glider" | grep -v "grep" | grep -v "glider.sh"| grep -v "init.d" | grep -v "service" | awk '{print $2}'`
	if [[ ! -z ${PID} ]]; then
		return 0
	else
		return 1
	fi
}

do_start(){
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "${Info} glider (PID ${PID}) 正在运行..." && exit 0
	else
		echo -e "${Info} glider 启动中..."
		ulimit -n 51200
		nohup glider -config "${CONFIG}" >> "${LOG}" 2>&1 &
		sleep 2s
		check_running
		if [[ $? -eq 0 ]]; then
			echo -e "${Info} $NAME 启动成功 !"
		else
			echo -e "${Error} $NAME 启动失败 !"
		fi
	fi
}

do_stop(){
	check_running
	if [[ $? -eq 0 ]]; then
		kill -9 ${PID}
		RETVAL=$?
		if [[ $RETVAL -eq 0 ]]; then
			echo -e "${Info} $NAME 停止成功 !"
		else
			echo -e "${Error} $NAME 停止失败 !"
		fi
	else
		echo -e "${Info} $NAME 未运行"
		RETVAL=1
	fi
}

do_status(){
	check_running
	if [[ $? -eq 0 ]]; then
		echo -e "${Info} $NAME (PID $(echo ${PID})) 正在运行..."
	else
		echo -e "${Info} $NAME 未运行 !"
		RETVAL=1
	fi
}

do_restart(){
	do_stop
	do_start
}

do_reload(){
    check_running
    if [[ $? -eq 0 ]]; then
        kill -HUP ${PID}
        RETVAL=$?
        if [[ $RETVAL -eq 0 ]]; then
            echo -e "${Info} $NAME 重新加载成功 !"
        else
            echo -e "${Error} $NAME 重新加载失败 !"
        fi
    else
        echo -e "${Info} $NAME 未运行"
        RETVAL=1
    fi
}

case "$1" in
	start|stop|restart|status|reload)
	do_$1
	;;
	*)
	echo -e "使用方法: $0 { start | stop | restart | status | reload }"
	RETVAL=1
	;;
esac
exit $RETVAL
